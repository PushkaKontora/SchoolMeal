name: Staging

on:
  push:
    branches:
      - 'master'
      - 'deploy'

jobs:
  build:
    name: ${{ matrix.image }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        image:
          - postgres
          - app
          - nginx
        include:
          - image: postgres
            target: final
            context: postgres
          - image: app
            target: final
            context: backend
          - image: nginx
            target: web
            context: frontend/web
    steps:
      - name: Получение изменений
        uses: actions/checkout@v3

      - name: Аутентификация в Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Установка Buildx
        uses: docker/setup-buildx-action@v2

      - name: Сборка
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          target: ${{ matrix.target }}
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ matrix.image }}
          push: true

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Получение изменений
        uses: actions/checkout@v3

      - name: Генерация .env
        run: echo "${{ secrets.STAND_DOT_ENV }}" > .env

      - name: Копирование композов и .env на стенд
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.STAND_HOST }}
          username: ${{ secrets.STAND_USER }}
          password: ${{ secrets.STAND_PASSWORD }}
          source: "docker-compose.yaml,docker-compose.stand.yaml,.env"
          target: "~/school_meal"
          rm: true

      - name: Раскатка
        uses: appleboy/ssh-action@v1.0.3
        env:
          REGISTRY_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        with:
          host: ${{ secrets.STAND_HOST }}
          username: ${{ secrets.STAND_USER }}
          password: ${{ secrets.STAND_PASSWORD }}
          envs: REGISTRY_USERNAME,REGISTRY_PASSWORD
          script: |
            echo $REGISTRY_PASSWORD | docker login -u $REGISTRY_USERNAME --password-stdin
            cd ~/school_meal
            docker-compose pull
            docker-compose up -d
